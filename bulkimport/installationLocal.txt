

FINAL CONFIGURATION:
- graphdb and sipi run in Docker images
- knora and salsah run from sources in Scala






######################
##
##  GRAPHDB AND KNORA
##
######################


Each time something is changed in GraphDB, stop and start Knora


IMPORT GRAPHDB (to be done in this order)

- Admin
import admin.ttl
http://www.knora.org/data/admin
http://www.knora.org/data/admin

- Permissions
import permissions.ttl
http://www.knora.org/data/Permissions
http://www.knora.org/data/permissions


- Ontology
import ontology.ttl
http://www.knora.org/ontology/0112/roud-oeuvres
http://www.knora.org/ontology/0112/roud-oeuvres
(project number + shortname)


- List
import list.ttl
http://www.knora.org/data/0112/roud-oeuvres
http://www.knora.org/data/0112/roud-oeuvres


Download ttl of list to backup all data.
To clean everything, you can always destroy and recreate docker images

If problems, try '0.0.0.0:' instead of 'localhost'






######################
##
##  DOCKER
##
######################



https://hub.docker.com/r/platec/graphdb-free-init-1.1.0/

DOCKER CHEATSHEET
https://www.docker.com/sites/default/files/Docker_CheatSheet_08.09.2016_0.pdf

add group docker to my user
	sudo usermod -aG docker espadini



=================== PULL AND RUN ==========================================
First, you can pull image
	docker pull .... 

Or use run: it pull and start
	docker run --name name -p port:port -d --net=host image!
--name choose a name
-d detach
-p mapping port myMachine:inContainer
	
	docker run --name salsah -p 3335:3335 -d --net=host platec/knoradockerstacksalsah1

	docker run --name knora -p 3333:3333 -d --net=host platec/webapi-1.1.0

	docker run -v /tmp/:/tmp/ --name knora -p 3333:3333 -d --net=host platec/webapi-1.1.0

	docker run --name graphdb -p 7200:7200 -d --net=host platec/graphdb-free-init-1.1.0

	docker run --name sipi -p 1024:1024 -d --net=host dhlabbasel/sipi:latest
	docker run -v /tmp/:/tmp/ --name sipi --add-host webapihost:127.0.0.1 -p 1024:1024 -d --net=host dhlabbasel/sipi:latest

the following is the one allowing to take images from the NAS mounted in /mnt/scanlettMounted ------->>>>>>
	docker run -v /mnt/scanlettMounted/GustaveRoud/:/mnt/scanlettMounted/GustaveRoud/ --name sipiAccessScanlett --add-host webapihost:127.0.0.1 -p 1024:1024 -d --net=host dhlabbasel/sipi:latest



========================== COMMANDS DOCKER =========================================
List images
	docker images

See running processes
	docker ps

Stop docker
	docker stop nomdel'image
	docker stop graphdb

See all images, also the stopped ones
	docker ps -a

Start the process
	docker start graphdb

	docker logs graphdb

See logs live
	docker attach graphdb
	ctrl+c for detaching

Logs, like detach
	docker logs -f knora

Remove image, destroy it
	docker rm nameoftheimage


===================================== SIPI FOR ADVANCED USERS, SAVE IMAGES ==============================

For advanced users : faut donc lancer Sipi comme ceci pour conserver ses images à chaque re-création du container sipi 

	docker run -v /tmp/:/tmp/ -v /Users/gfaucher/work/projects/Knora-v1.1.0/sipi-localdata/images:/sipi/images …

Le container Sipi va stocker ses images (dans le container /sipi/images) dans /Users/gfaucher/work/projects/Knora-v1.1.0/sipi-localdata/images (un répertoire que j’ai créé sur ma machine)
A chaque fois que je détruis et refait un docker run de sipi je retrouve toutes mes précédentes images.







######################
##
##  SCALA
##
######################


============================ KNORA =======================================

- install sbt (for compiling Knora) : https://www.scala-sbt.org/1.x/docs/Installing-sbt-on-Linux.html

- download Knora 1.1.0 : https://github.com/dhlab-basel/Knora/archive/v1.1.0.zip

- unzip  + cd Knora-1.1.0/webapi

- launch sbt :  (maybe long the first time)

	$ sbt 

- start Knora : (maybe long the first time)

	> reStart 

Should be running at  http://localhost:3333/v1/vocabularies 

- Stop

	> reStop 

- Status

	> reStatus

============================ SALSAH =====================================

Same thing done for Knora (from Knora-1.1.0/salsah)









